2024-05-14T14:56:16.772 40faa9a3 ["-f", "TypeBasedSTLCGenerator(2,1,[:size,:stack_tail],[:size,:stack_tail],2,6)", "Pair{MLELossConfig{STLC},Float64}[MLELossConfig{STLC}(NumApps(),Linear())=>0.5]", "10"]
== Config ==
TAG: test
TypeBasedSTLCGenerator(2, 1, [:size, :stack_tail], [:size, :stack_tail], 2, 6)
Pair{MLELossConfig{STLC}, Float64}[MLELossConfig{STLC}(NumApps(), Linear()) => 0.5]
Epochs: 10
DistNat: DistUInt32
SEED: 0

Building generation computation graph...
  3.995382078 seconds

Building computation graph for MLELossConfig{STLC}(NumApps(), Linear())...
  4.940081282 seconds

ADNodes of interest (initial):
Dict("num4%%1%(0, 13)" => 0.5, "freq_var%%2%(0, 0)" => 0.5, "num4%%2%(0, 0)" => 0.5, "freq_abs%%1%(0, 13)" => 0.5, "freq_app%%1%(0, 12)" => 0.5, "freq_bool%%1%(0, 11)" => 0.5, "freq_abs%%2%(0, 0)" => 0.5, "freq_abs%%1%(0, 12)" => 0.5, "num32%%2%(0, 0)" => 0.5, "ptrue%%1%(0, 13)" => 0.5, "freq_bool%%1%(0, 12)" => 0.5, "num1%%1%(0, 11)" => 0.5, "ptbool%%1%(11, 10)" => 0.5, "num8%%1%(0, 12)" => 0.5, "pvar%%0%(13, 12)" => 0.5, "freq_app%%1%(0, 11)" => 0.5, "num2%%1%(0, 13)" => 0.5, "num2%%1%(0, 12)" => 0.5, "pvar%%0%(12, 11)" => 0.5, "freq_bool%%1%(0, 13)" => 0.5, "freq_var%%1%(0, 12)" => 0.5, "num32%%1%(0, 11)" => 0.5, "ptrue%%1%(0, 11)" => 0.5, "pvar%%0%(12, 13)" => 0.5, "num1%%1%(0, 12)" => 0.5, "ptbool%%1%(12, 10)" => 0.5, "freq_abs%%1%(0, 11)" => 0.5, "ptbool%%1%(13, 10)" => 0.5, "ptrue%%2%(0, 0)" => 0.5, "num2%%1%(0, 11)" => 0.5, "num32%%1%(0, 13)" => 0.5, "freq_bool%%2%(0, 0)" => 0.5, "num16%%1%(0, 11)" => 0.5, "pvar%%0%(11, 13)" => 0.5, "num8%%1%(0, 11)" => 0.5, "pvar%%0%(13, 11)" => 0.5, "num4%%1%(0, 11)" => 0.5, "num16%%1%(0, 13)" => 0.5, "num1%%2%(0, 0)" => 0.5, "num16%%1%(0, 12)" => 0.5, "num8%%1%(0, 13)" => 0.5, "num16%%2%(0, 0)" => 0.5, "pvar%%0%(11, 11)" => 0.5, "freq_var%%1%(0, 13)" => 0.5, "freq_var%%1%(0, 11)" => 0.5, "pvar%%0%(13, 13)" => 0.5, "pvar%%0%(11, 12)" => 0.5, "pvar%%0%(12, 12)" => 0.5, "num32%%1%(0, 12)" => 0.5, "ptrue%%1%(0, 12)" => 0.5, "num1%%1%(0, 13)" => 0.5, "num2%%2%(0, 0)" => 0.5, "freq_app%%1%(0, 13)" => 0.5, "ptbool%%1%(0, 10)" => 0.5, "num4%%1%(0, 12)" => 0.5, "freq_app%%2%(0, 0)" => 0.5, "num8%%2%(0, 0)" => 0.5)

Parameter values (initial):
Dict{Var, Union{Real, AbstractMatrix{<:Real}}}(Var("num2%%1%(0, 13)_before_sigmoid") => 0, Var("num4%%2%(0, 0)_before_sigmoid") => 0, Var("num32%%2%(0, 0)_before_sigmoid") => 0, Var("num32%%1%(0, 13)_before_sigmoid") => 0, Var("freq_var%%1%(0, 11)_before_sigmoid") => 0, Var("freq_var%%2%(0, 0)_before_sigmoid") => 0, Var("freq_abs%%1%(0, 12)_before_sigmoid") => 0, Var("num8%%1%(0, 13)_before_sigmoid") => 0, Var("freq_app%%2%(0, 0)_before_sigmoid") => 0, Var("ptbool%%1%(0, 10)_before_sigmoid") => 0, Var("num2%%1%(0, 12)_before_sigmoid") => 0, Var("num2%%1%(0, 11)_before_sigmoid") => 0, Var("freq_abs%%2%(0, 0)_before_sigmoid") => 0, Var("pvar%%0%(13, 11)_before_sigmoid") => 0, Var("num1%%1%(0, 12)_before_sigmoid") => 0, Var("num16%%1%(0, 11)_before_sigmoid") => 0, Var("pvar%%0%(11, 11)_before_sigmoid") => 0, Var("num8%%1%(0, 11)_before_sigmoid") => 0, Var("num2%%2%(0, 0)_before_sigmoid") => 0, Var("freq_bool%%2%(0, 0)_before_sigmoid") => 0, Var("freq_var%%1%(0, 13)_before_sigmoid") => 0, Var("num8%%1%(0, 12)_before_sigmoid") => 0, Var("ptbool%%1%(13, 10)_before_sigmoid") => 0, Var("pvar%%0%(11, 13)_before_sigmoid") => 0, Var("ptrue%%1%(0, 11)_before_sigmoid") => 0, Var("ptbool%%1%(11, 10)_before_sigmoid") => 0, Var("pvar%%0%(12, 13)_before_sigmoid") => 0, Var("ptrue%%1%(0, 12)_before_sigmoid") => 0, Var("freq_abs%%1%(0, 11)_before_sigmoid") => 0, Var("ptbool%%1%(12, 10)_before_sigmoid") => 0, Var("freq_var%%1%(0, 12)_before_sigmoid") => 0, Var("num1%%2%(0, 0)_before_sigmoid") => 0, Var("num1%%1%(0, 13)_before_sigmoid") => 0, Var("ptrue%%2%(0, 0)_before_sigmoid") => 0, Var("pvar%%0%(13, 12)_before_sigmoid") => 0, Var("num1%%1%(0, 11)_before_sigmoid") => 0, Var("freq_bool%%1%(0, 13)_before_sigmoid") => 0, Var("num4%%1%(0, 13)_before_sigmoid") => 0, Var("num4%%1%(0, 11)_before_sigmoid") => 0, Var("num16%%1%(0, 12)_before_sigmoid") => 0, Var("num4%%1%(0, 12)_before_sigmoid") => 0, Var("ptrue%%1%(0, 13)_before_sigmoid") => 0, Var("num8%%2%(0, 0)_before_sigmoid") => 0, Var("num32%%1%(0, 12)_before_sigmoid") => 0, Var("freq_app%%1%(0, 12)_before_sigmoid") => 0, Var("pvar%%0%(12, 11)_before_sigmoid") => 0, Var("freq_app%%1%(0, 13)_before_sigmoid") => 0, Var("freq_bool%%1%(0, 11)_before_sigmoid") => 0, Var("num16%%2%(0, 0)_before_sigmoid") => 0, Var("freq_app%%1%(0, 11)_before_sigmoid") => 0, Var("freq_bool%%1%(0, 12)_before_sigmoid") => 0, Var("pvar%%0%(11, 12)_before_sigmoid") => 0, Var("num32%%1%(0, 11)_before_sigmoid") => 0, Var("freq_abs%%1%(0, 13)_before_sigmoid") => 0, Var("num16%%1%(0, 13)_before_sigmoid") => 0, Var("pvar%%0%(13, 13)_before_sigmoid") => 0, Var("pvar%%0%(12, 12)_before_sigmoid") => 0)

Saving samples...
Saved samples to /space/tjoa/tuning-output/test/stlc/typebased/sz=2-tysz=1/dependents=size-stack_tail/ty_dependents=size-stack_tail/stack_size=2/intwidth=6/num_apps/linear/0.5/epochs=10/terms_initial.txt.
  13.700311037 seconds

Saved Coq generator to /space/tjoa/tuning-output/test/stlc/typebased/sz=2-tysz=1/dependents=size-stack_tail/ty_dependents=size-stack_tail/stack_size=2/intwidth=6/num_apps/linear/0.5/epochs=10/initial_Generator.v
ADNodes of interest (trained):
Dict("num4%%1%(0, 13)" => 0.5, "freq_var%%2%(0, 0)" => 0.0561492174311817, "num4%%2%(0, 0)" => 0.5, "freq_abs%%1%(0, 13)" => 0.19197609700585785, "freq_app%%1%(0, 12)" => 0.8678658551017918, "freq_bool%%1%(0, 11)" => 0.4690603603209624, "freq_abs%%2%(0, 0)" => 0.07712791816391242, "freq_abs%%1%(0, 12)" => 0.19197609700585774, "num32%%2%(0, 0)" => 0.5, "ptrue%%1%(0, 13)" => 0.5, "freq_bool%%1%(0, 12)" => 0.19197609700585774, "num1%%1%(0, 11)" => 0.5, "ptbool%%1%(11, 10)" => 0.5, "num8%%1%(0, 12)" => 0.5, "pvar%%0%(13, 12)" => 0.5, "freq_app%%1%(0, 11)" => 0.5827569151708785, "num2%%1%(0, 13)" => 0.5, "num2%%1%(0, 12)" => 0.5, "pvar%%0%(12, 11)" => 0.5, "freq_bool%%1%(0, 13)" => 0.19197609700585785, "freq_var%%1%(0, 12)" => 0.19197609700585777, "num32%%1%(0, 11)" => 0.5, "ptrue%%1%(0, 11)" => 0.5, "pvar%%0%(12, 13)" => 0.5, "num1%%1%(0, 12)" => 0.5, "ptbool%%1%(12, 10)" => 0.5, "freq_abs%%1%(0, 11)" => 0.4690603603209624, "ptbool%%1%(13, 10)" => 0.5, "ptrue%%2%(0, 0)" => 0.5, "num2%%1%(0, 11)" => 0.5, "num32%%1%(0, 13)" => 0.5, "freq_bool%%2%(0, 0)" => 0.0561492174311817, "num16%%1%(0, 11)" => 0.5, "pvar%%0%(11, 13)" => 0.5, "num8%%1%(0, 11)" => 0.5, "pvar%%0%(13, 11)" => 0.5, "num4%%1%(0, 11)" => 0.5, "num16%%1%(0, 13)" => 0.5, "num1%%2%(0, 0)" => 0.5, "num16%%1%(0, 12)" => 0.5, "num8%%1%(0, 13)" => 0.5, "num16%%2%(0, 0)" => 0.5, "pvar%%0%(11, 11)" => 0.5, "freq_var%%1%(0, 13)" => 0.19197609700585788, "freq_var%%1%(0, 11)" => 0.4690603603209624, "pvar%%0%(13, 13)" => 0.5, "pvar%%0%(11, 12)" => 0.5, "pvar%%0%(12, 12)" => 0.5, "num32%%1%(0, 12)" => 0.5, "ptrue%%1%(0, 12)" => 0.5, "num1%%1%(0, 13)" => 0.5, "num2%%2%(0, 0)" => 0.5, "freq_app%%1%(0, 13)" => 0.8678658551017918, "ptbool%%1%(0, 10)" => 0.5, "num4%%1%(0, 12)" => 0.5, "freq_app%%2%(0, 0)" => 0.9206694579447617, "num8%%2%(0, 0)" => 0.5)

Parameter values (trained):
Dict{Var, Union{Real, AbstractMatrix{<:Real}}}(Var("num2%%1%(0, 13)_before_sigmoid") => 0, Var("num4%%2%(0, 0)_before_sigmoid") => 0, Var("num32%%2%(0, 0)_before_sigmoid") => 0, Var("num32%%1%(0, 13)_before_sigmoid") => 0, Var("freq_var%%1%(0, 11)_before_sigmoid") => -0.12391688165001455, Var("freq_var%%2%(0, 0)_before_sigmoid") => -2.821955340362843, Var("freq_abs%%1%(0, 12)_before_sigmoid") => -1.437220771480564, Var("num8%%1%(0, 13)_before_sigmoid") => 0, Var("freq_app%%2%(0, 0)_before_sigmoid") => 2.451477876890786, Var("ptbool%%1%(0, 10)_before_sigmoid") => 0, Var("num2%%1%(0, 12)_before_sigmoid") => 0, Var("num2%%1%(0, 11)_before_sigmoid") => 0, Var("freq_abs%%2%(0, 0)_before_sigmoid") => -2.4820253170194015, Var("pvar%%0%(13, 11)_before_sigmoid") => 0, Var("num1%%1%(0, 12)_before_sigmoid") => 0, Var("num16%%1%(0, 11)_before_sigmoid") => 0, Var("pvar%%0%(11, 11)_before_sigmoid") => 0, Var("num8%%1%(0, 11)_before_sigmoid") => 0, Var("num2%%2%(0, 0)_before_sigmoid") => 0, Var("freq_bool%%2%(0, 0)_before_sigmoid") => -2.821955340362843, Var("freq_var%%1%(0, 13)_before_sigmoid") => -1.4372207714805632, Var("num8%%1%(0, 12)_before_sigmoid") => 0, Var("ptbool%%1%(13, 10)_before_sigmoid") => 0, Var("pvar%%0%(11, 13)_before_sigmoid") => 0, Var("ptrue%%1%(0, 11)_before_sigmoid") => 0, Var("ptbool%%1%(11, 10)_before_sigmoid") => 0, Var("pvar%%0%(12, 13)_before_sigmoid") => 0, Var("ptrue%%1%(0, 12)_before_sigmoid") => 0, Var("freq_abs%%1%(0, 11)_before_sigmoid") => -0.12391688165001453, Var("ptbool%%1%(12, 10)_before_sigmoid") => 0, Var("freq_var%%1%(0, 12)_before_sigmoid") => -1.4372207714805638, Var("num1%%2%(0, 0)_before_sigmoid") => 0, Var("num1%%1%(0, 13)_before_sigmoid") => 0, Var("ptrue%%2%(0, 0)_before_sigmoid") => 0, Var("pvar%%0%(13, 12)_before_sigmoid") => 0, Var("num1%%1%(0, 11)_before_sigmoid") => 0, Var("freq_bool%%1%(0, 13)_before_sigmoid") => -1.4372207714805634, Var("num4%%1%(0, 13)_before_sigmoid") => 0, Var("num4%%1%(0, 11)_before_sigmoid") => 0, Var("num16%%1%(0, 12)_before_sigmoid") => 0, Var("num4%%1%(0, 12)_before_sigmoid") => 0, Var("ptrue%%1%(0, 13)_before_sigmoid") => 0, Var("num8%%2%(0, 0)_before_sigmoid") => 0, Var("num32%%1%(0, 12)_before_sigmoid") => 0, Var("freq_app%%1%(0, 12)_before_sigmoid") => 1.8822195021199122, Var("pvar%%0%(12, 11)_before_sigmoid") => 0, Var("freq_app%%1%(0, 13)_before_sigmoid") => 1.882219502119912, Var("freq_bool%%1%(0, 11)_before_sigmoid") => -0.12391688165001452, Var("num16%%2%(0, 0)_before_sigmoid") => 0, Var("freq_app%%1%(0, 11)_before_sigmoid") => 0.33410115509356497, Var("freq_bool%%1%(0, 12)_before_sigmoid") => -1.437220771480564, Var("pvar%%0%(11, 12)_before_sigmoid") => 0, Var("num32%%1%(0, 11)_before_sigmoid") => 0, Var("freq_abs%%1%(0, 13)_before_sigmoid") => -1.4372207714805634, Var("num16%%1%(0, 13)_before_sigmoid") => 0, Var("pvar%%0%(13, 13)_before_sigmoid") => 0, Var("pvar%%0%(12, 12)_before_sigmoid") => 0)

Saving samples...
Saved samples to /space/tjoa/tuning-output/test/stlc/typebased/sz=2-tysz=1/dependents=size-stack_tail/ty_dependents=size-stack_tail/stack_size=2/intwidth=6/num_apps/linear/0.5/epochs=10/terms_trained.txt.
  4.456603034 seconds

Saved Coq generator to /space/tjoa/tuning-output/test/stlc/typebased/sz=2-tysz=1/dependents=size-stack_tail/ty_dependents=size-stack_tail/stack_size=2/intwidth=6/num_apps/linear/0.5/epochs=10/trained_Generator.v
2024-05-14T14:57:05.423
Total time elapsed: 48 seconds, 651 milliseconds
