2024-05-08T22:59:56.736 0df1b387 ["-f", "TypeBasedSTLCGenerator(3,2,[:size,:stack_tail],[:size,:stack_tail],1,6)", "Pair{SamplingEntropy{STLC},Float64}[SamplingEntropy{STLC}(1,50,STLCWellTyped(),:prob_equals,0.01)=>0.01]", "3"]
== Config ==
TAG: test
TypeBasedSTLCGenerator(3, 2, [:size, :stack_tail], [:size, :stack_tail], 1, 6)
Pair{SamplingEntropy{STLC}, Float64}[SamplingEntropy{STLC}(1, 50, STLCWellTyped(), :prob_equals, 0.01) => 0.01]
Epochs: 3
DistNat: DistUInt32
SEED: 0

Building generation computation graph...
  4.286862757 seconds

ADNodes of interest (initial):
Dict("num8%%3%(0,)" => 0.5, "num4%%1%(12,)" => 0.5, "num8%%1%(12,)" => 0.5, "ptrue%%3%(0,)" => 0.5, "num1%%1%(13,)" => 0.5, "num32%%2%(12,)" => 0.5, "freq_boolean%%2%(11,)" => 0.5, "ptrue%%2%(11,)" => 0.5, "num16%%1%(13,)" => 0.5, "num2%%3%(0,)" => 0.5, "freq_var%%2%(13,)" => 0.5, "num16%%2%(13,)" => 0.5, "pvar%%0%(13,)" => 0.5, "freq_abs%%2%(11,)" => 0.5, "num8%%2%(13,)" => 0.5, "freq_app%%1%(13,)" => 0.5, "freq_app%%2%(11,)" => 0.5, "num4%%1%(11,)" => 0.5, "num4%%3%(0,)" => 0.5, "num32%%2%(13,)" => 0.5, "freq_var%%1%(13,)" => 0.5, "freq_boolean%%2%(13,)" => 0.5, "pvar%%0%(12,)" => 0.5, "freq_abs%%2%(12,)" => 0.5, "num32%%1%(12,)" => 0.5, "ptrue%%2%(13,)" => 0.5, "num32%%3%(0,)" => 0.5, "num16%%1%(11,)" => 0.5, "num32%%2%(11,)" => 0.5, "num2%%1%(12,)" => 0.5, "freq_abs%%3%(0,)" => 0.5, "num2%%1%(13,)" => 0.5, "num16%%3%(0,)" => 0.5, "ptrue%%2%(12,)" => 0.5, "num32%%1%(11,)" => 0.5, "num32%%1%(13,)" => 0.5, "freq_var%%2%(11,)" => 0.5, "freq_var%%2%(12,)" => 0.5, "freq_app%%1%(11,)" => 0.5, "num4%%2%(12,)" => 0.5, "num4%%2%(13,)" => 0.5, "freq_boolean%%1%(12,)" => 0.5, "ptbool%%1%(14,)" => 0.5, "freq_var%%1%(12,)" => 0.5, "num4%%2%(11,)" => 0.5, "ptbool%%1%(15,)" => 0.5, "num1%%3%(0,)" => 0.5, "freq_app%%2%(13,)" => 0.5, "freq_app%%1%(12,)" => 0.5, "ptrue%%1%(11,)" => 0.5, "freq_app%%2%(12,)" => 0.5, "num8%%2%(12,)" => 0.5, "num1%%2%(12,)" => 0.5, "pvar%%0%(11,)" => 0.5, "freq_var%%1%(11,)" => 0.5, "freq_abs%%2%(13,)" => 0.5, "ptbool%%2%(10,)" => 0.5, "num1%%2%(11,)" => 0.5, "num8%%1%(11,)" => 0.5, "freq_app%%3%(0,)" => 0.5, "num16%%1%(12,)" => 0.5, "ptrue%%1%(13,)" => 0.5, "num1%%1%(12,)" => 0.5, "num2%%2%(11,)" => 0.5, "num2%%1%(11,)" => 0.5, "ptrue%%1%(12,)" => 0.5, "freq_abs%%1%(11,)" => 0.5, "num1%%2%(13,)" => 0.5, "num4%%1%(13,)" => 0.5, "num2%%2%(12,)" => 0.5, "num8%%1%(13,)" => 0.5, "freq_boolean%%3%(0,)" => 0.5, "num1%%1%(11,)" => 0.5, "num2%%2%(13,)" => 0.5, "num16%%2%(12,)" => 0.5, "freq_boolean%%1%(11,)" => 0.5, "freq_abs%%1%(12,)" => 0.5, "num8%%2%(11,)" => 0.5, "freq_boolean%%1%(13,)" => 0.5, "freq_boolean%%2%(12,)" => 0.5, "freq_abs%%1%(13,)" => 0.5, "freq_var%%3%(0,)" => 0.5, "num16%%2%(11,)" => 0.5)

Parameter values (initial):
Dict{Var, Union{Real, AbstractMatrix{<:Real}}}(Var("num2%%1%(11,)_before_sigmoid") => 0, Var("num2%%2%(12,)_before_sigmoid") => 0, Var("num32%%1%(11,)_before_sigmoid") => 0, Var("num4%%2%(11,)_before_sigmoid") => 0, Var("freq_boolean%%1%(11,)_before_sigmoid") => 0, Var("num2%%1%(13,)_before_sigmoid") => 0, Var("num4%%1%(12,)_before_sigmoid") => 0, Var("freq_boolean%%2%(11,)_before_sigmoid") => 0, Var("num8%%1%(11,)_before_sigmoid") => 0, Var("num2%%1%(12,)_before_sigmoid") => 0, Var("freq_abs%%2%(13,)_before_sigmoid") => 0, Var("num8%%2%(11,)_before_sigmoid") => 0, Var("num8%%3%(0,)_before_sigmoid") => 0, Var("num4%%1%(11,)_before_sigmoid") => 0, Var("num1%%1%(12,)_before_sigmoid") => 0, Var("freq_boolean%%3%(0,)_before_sigmoid") => 0, Var("freq_var%%3%(0,)_before_sigmoid") => 0, Var("ptrue%%1%(12,)_before_sigmoid") => 0, Var("num1%%2%(11,)_before_sigmoid") => 0, Var("freq_app%%3%(0,)_before_sigmoid") => 0, Var("freq_abs%%1%(11,)_before_sigmoid") => 0, Var("freq_var%%1%(13,)_before_sigmoid") => 0, Var("ptbool%%1%(14,)_before_sigmoid") => 0, Var("freq_abs%%3%(0,)_before_sigmoid") => 0, Var("ptrue%%3%(0,)_before_sigmoid") => 0, Var("num32%%2%(13,)_before_sigmoid") => 0, Var("num32%%2%(11,)_before_sigmoid") => 0, Var("num16%%1%(13,)_before_sigmoid") => 0, Var("num1%%3%(0,)_before_sigmoid") => 0, Var("pvar%%0%(12,)_before_sigmoid") => 0, Var("freq_boolean%%2%(13,)_before_sigmoid") => 0, Var("num16%%1%(11,)_before_sigmoid") => 0, Var("num32%%2%(12,)_before_sigmoid") => 0, Var("num8%%1%(12,)_before_sigmoid") => 0, Var("num8%%2%(13,)_before_sigmoid") => 0, Var("num32%%3%(0,)_before_sigmoid") => 0, Var("freq_var%%2%(12,)_before_sigmoid") => 0, Var("pvar%%0%(13,)_before_sigmoid") => 0, Var("num2%%3%(0,)_before_sigmoid") => 0, Var("num16%%2%(11,)_before_sigmoid") => 0, Var("freq_app%%2%(11,)_before_sigmoid") => 0, Var("num1%%2%(12,)_before_sigmoid") => 0, Var("freq_var%%2%(13,)_before_sigmoid") => 0, Var("num4%%1%(13,)_before_sigmoid") => 0, Var("num4%%2%(13,)_before_sigmoid") => 0, Var("num1%%2%(13,)_before_sigmoid") => 0, Var("num1%%1%(13,)_before_sigmoid") => 0, Var("freq_app%%1%(11,)_before_sigmoid") => 0, Var("freq_abs%%1%(13,)_before_sigmoid") => 0, Var("freq_app%%1%(12,)_before_sigmoid") => 0, Var("ptrue%%2%(12,)_before_sigmoid") => 0, Var("freq_app%%2%(13,)_before_sigmoid") => 0, Var("freq_app%%1%(13,)_before_sigmoid") => 0, Var("pvar%%0%(11,)_before_sigmoid") => 0, Var("freq_boolean%%2%(12,)_before_sigmoid") => 0, Var("num32%%1%(12,)_before_sigmoid") => 0, Var("num4%%3%(0,)_before_sigmoid") => 0, Var("num8%%1%(13,)_before_sigmoid") => 0, Var("num16%%1%(12,)_before_sigmoid") => 0, Var("num2%%2%(11,)_before_sigmoid") => 0, Var("ptbool%%2%(10,)_before_sigmoid") => 0, Var("num16%%2%(12,)_before_sigmoid") => 0, Var("num2%%2%(13,)_before_sigmoid") => 0, Var("num32%%1%(13,)_before_sigmoid") => 0, Var("freq_abs%%2%(11,)_before_sigmoid") => 0, Var("num8%%2%(12,)_before_sigmoid") => 0, Var("num16%%2%(13,)_before_sigmoid") => 0, Var("ptbool%%1%(15,)_before_sigmoid") => 0, Var("freq_var%%1%(11,)_before_sigmoid") => 0, Var("freq_app%%2%(12,)_before_sigmoid") => 0, Var("ptrue%%1%(11,)_before_sigmoid") => 0, Var("freq_boolean%%1%(12,)_before_sigmoid") => 0, Var("num16%%3%(0,)_before_sigmoid") => 0, Var("freq_abs%%2%(12,)_before_sigmoid") => 0, Var("freq_var%%1%(12,)_before_sigmoid") => 0, Var("freq_var%%2%(11,)_before_sigmoid") => 0, Var("ptrue%%1%(13,)_before_sigmoid") => 0, Var("freq_boolean%%1%(13,)_before_sigmoid") => 0, Var("freq_abs%%1%(12,)_before_sigmoid") => 0, Var("ptrue%%2%(11,)_before_sigmoid") => 0, Var("ptrue%%2%(13,)_before_sigmoid") => 0, Var("num1%%1%(11,)_before_sigmoid") => 0, Var("num4%%2%(12,)_before_sigmoid") => 0)

Saving samples...
Saved samples to /space/tjoa/tuning-output/test/stlc/typebased/sz=3-tysz=2/dependents=size-stack_tail/ty_dependents=size-stack_tail/stack_size=1/intwidth=6/reinforce_sampling_entropy/freq=1-spb=50/eq=prob_equals/prop=stlcwelltyped/failure_penalty=0.01/0.01/epochs=3/terms_initial.txt.
  18.495376598 seconds

Saved Coq generator to /space/tjoa/tuning-output/test/stlc/typebased/sz=3-tysz=2/dependents=size-stack_tail/ty_dependents=size-stack_tail/stack_size=1/intwidth=6/reinforce_sampling_entropy/freq=1-spb=50/eq=prob_equals/prop=stlcwelltyped/failure_penalty=0.01/0.01/epochs=3/initial_Generator.v
ADNodes of interest (trained):
Dict("num8%%3%(0,)" => 0.5, "num4%%1%(12,)" => 0.5, "num8%%1%(12,)" => 0.5, "ptrue%%3%(0,)" => 0.4994811058591053, "num1%%1%(13,)" => 0.5, "num32%%2%(12,)" => 0.5, "freq_boolean%%2%(11,)" => 0.5006318411639343, "ptrue%%2%(11,)" => 0.5002428461143215, "num16%%1%(13,)" => 0.5, "num2%%3%(0,)" => 0.5, "freq_var%%2%(13,)" => 0.5, "num16%%2%(13,)" => 0.5, "pvar%%0%(13,)" => 0.5, "freq_abs%%2%(11,)" => 0.5003203765714096, "num8%%2%(13,)" => 0.5, "freq_app%%1%(13,)" => 0.49994799607375723, "freq_app%%2%(11,)" => 0.49962763136077387, "num4%%1%(11,)" => 0.49968808380921054, "num4%%3%(0,)" => 0.5, "num32%%2%(13,)" => 0.5, "freq_var%%1%(13,)" => 0.49994799607375723, "freq_boolean%%2%(13,)" => 0.5, "pvar%%0%(12,)" => 0.5, "freq_abs%%2%(12,)" => 0.5, "num32%%1%(12,)" => 0.5, "ptrue%%2%(13,)" => 0.5, "num32%%3%(0,)" => 0.5, "num16%%1%(11,)" => 0.49968808380921054, "num32%%2%(11,)" => 0.5, "num2%%1%(12,)" => 0.5, "freq_abs%%3%(0,)" => 0.5012458961506836, "num2%%1%(13,)" => 0.5, "num16%%3%(0,)" => 0.5, "ptrue%%2%(12,)" => 0.5, "num32%%1%(11,)" => 0.49968808380921054, "num32%%1%(13,)" => 0.5, "freq_var%%2%(11,)" => 0.49941954384166026, "freq_var%%2%(12,)" => 0.5, "freq_app%%1%(11,)" => 0.4997747356125095, "num4%%2%(12,)" => 0.5, "num4%%2%(13,)" => 0.5, "freq_boolean%%1%(12,)" => 0.49994799607375723, "ptbool%%1%(14,)" => 0.49954956818938, "freq_var%%1%(12,)" => 0.49994799607375723, "num4%%2%(11,)" => 0.5, "ptbool%%1%(15,)" => 0.49944709360142786, "num1%%3%(0,)" => 0.5, "freq_app%%2%(13,)" => 0.5, "freq_app%%1%(12,)" => 0.49994799607375723, "ptrue%%1%(11,)" => 0.5003811911994364, "freq_app%%2%(12,)" => 0.5, "num8%%2%(12,)" => 0.5, "num1%%2%(12,)" => 0.5, "pvar%%0%(11,)" => 0.4999999790451207, "freq_var%%1%(11,)" => 0.5000866518439496, "freq_abs%%2%(13,)" => 0.5, "ptbool%%2%(10,)" => 0.4998301695982409, "num1%%2%(11,)" => 0.5, "num8%%1%(11,)" => 0.49968808380921054, "freq_app%%3%(0,)" => 0.49892582259872925, "num16%%1%(12,)" => 0.5, "ptrue%%1%(13,)" => 0.49979198430627997, "num1%%1%(12,)" => 0.5, "num2%%2%(11,)" => 0.5, "num2%%1%(11,)" => 0.49968808380921054, "ptrue%%1%(12,)" => 0.5, "freq_abs%%1%(11,)" => 0.49998275780998774, "num1%%2%(13,)" => 0.5, "num4%%1%(13,)" => 0.5, "num2%%2%(12,)" => 0.5, "num8%%1%(13,)" => 0.5, "freq_boolean%%3%(0,)" => 0.5008994927182915, "num1%%1%(11,)" => 0.5003119161907895, "num2%%2%(13,)" => 0.5, "num16%%2%(12,)" => 0.5, "freq_boolean%%1%(11,)" => 0.5001559863181201, "freq_abs%%1%(12,)" => 0.500156011774228, "num8%%2%(11,)" => 0.5, "freq_boolean%%1%(13,)" => 0.500156011774228, "freq_boolean%%2%(12,)" => 0.5, "freq_abs%%1%(13,)" => 0.49994799607375723, "freq_var%%3%(0,)" => 0.49892582259872925, "num16%%2%(11,)" => 0.5)

Parameter values (trained):
Dict{Var, Union{Real, AbstractMatrix{<:Real}}}(Var("num2%%1%(11,)_before_sigmoid") => -0.0012476649250079015, Var("num2%%2%(12,)_before_sigmoid") => 0, Var("num32%%1%(11,)_before_sigmoid") => -0.0012476649250079015, Var("num4%%2%(11,)_before_sigmoid") => 0, Var("freq_boolean%%1%(11,)_before_sigmoid") => 0.0006239452927227414, Var("num2%%1%(13,)_before_sigmoid") => 0, Var("num4%%1%(12,)_before_sigmoid") => 0, Var("freq_boolean%%2%(11,)_before_sigmoid") => 0.002527366001049094, Var("num8%%1%(11,)_before_sigmoid") => -0.0012476649250079015, Var("num2%%1%(12,)_before_sigmoid") => 0, Var("freq_abs%%2%(13,)_before_sigmoid") => 0, Var("num8%%2%(11,)_before_sigmoid") => 0, Var("num8%%3%(0,)_before_sigmoid") => 0, Var("num4%%1%(11,)_before_sigmoid") => -0.0012476649250079015, Var("num1%%1%(12,)_before_sigmoid") => 0, Var("freq_boolean%%3%(0,)_before_sigmoid") => 0.0035979747546030292, Var("freq_var%%3%(0,)_before_sigmoid") => -0.00429671621548657, Var("ptrue%%1%(12,)_before_sigmoid") => 0, Var("num1%%2%(11,)_before_sigmoid") => 0, Var("freq_app%%3%(0,)_before_sigmoid") => -0.00429671621548657, Var("freq_abs%%1%(11,)_before_sigmoid") => -6.896876007667194e-5, Var("freq_var%%1%(13,)_before_sigmoid") => -0.00020801570572137991, Var("ptbool%%1%(14,)_before_sigmoid") => -0.0018017277298807478, Var("freq_abs%%3%(0,)_before_sigmoid") => 0.004983594917179835, Var("ptrue%%3%(0,)_before_sigmoid") => -0.0020755773087143326, Var("num32%%2%(13,)_before_sigmoid") => 0, Var("num32%%2%(11,)_before_sigmoid") => 0, Var("num16%%1%(13,)_before_sigmoid") => 0, Var("num1%%3%(0,)_before_sigmoid") => 0, Var("pvar%%0%(12,)_before_sigmoid") => 0, Var("freq_boolean%%2%(13,)_before_sigmoid") => 0, Var("num16%%1%(11,)_before_sigmoid") => -0.0012476649250079015, Var("num32%%2%(12,)_before_sigmoid") => 0, Var("num8%%1%(12,)_before_sigmoid") => 0, Var("num8%%2%(13,)_before_sigmoid") => 0, Var("num32%%3%(0,)_before_sigmoid") => 0, Var("freq_var%%2%(12,)_before_sigmoid") => 0, Var("pvar%%0%(13,)_before_sigmoid") => 0, Var("num2%%3%(0,)_before_sigmoid") => 0, Var("num16%%2%(11,)_before_sigmoid") => 0, Var("freq_app%%2%(11,)_before_sigmoid") => -0.0014894748322754692, Var("num1%%2%(12,)_before_sigmoid") => 0, Var("freq_var%%2%(13,)_before_sigmoid") => 0, Var("num4%%1%(13,)_before_sigmoid") => 0, Var("num4%%2%(13,)_before_sigmoid") => 0, Var("num1%%2%(13,)_before_sigmoid") => 0, Var("num1%%1%(13,)_before_sigmoid") => 0, Var("freq_app%%1%(11,)_before_sigmoid") => -0.000901057610926287, Var("freq_abs%%1%(13,)_before_sigmoid") => -0.00020801570572137991, Var("freq_app%%1%(12,)_before_sigmoid") => -0.00020801570572137991, Var("ptrue%%2%(12,)_before_sigmoid") => 0, Var("freq_app%%2%(13,)_before_sigmoid") => 0, Var("freq_app%%1%(13,)_before_sigmoid") => -0.00020801570572137991, Var("pvar%%0%(11,)_before_sigmoid") => -8.381951722557113e-8, Var("freq_boolean%%2%(12,)_before_sigmoid") => 0, Var("num32%%1%(12,)_before_sigmoid") => 0, Var("num4%%3%(0,)_before_sigmoid") => 0, Var("num8%%1%(13,)_before_sigmoid") => 0, Var("num16%%1%(12,)_before_sigmoid") => 0, Var("num2%%2%(11,)_before_sigmoid") => 0, Var("ptbool%%2%(10,)_before_sigmoid") => -0.0006793216331607568, Var("num16%%2%(12,)_before_sigmoid") => 0, Var("num2%%2%(13,)_before_sigmoid") => 0, Var("num32%%1%(13,)_before_sigmoid") => 0, Var("freq_abs%%2%(11,)_before_sigmoid") => 0.001281506461018637, Var("num8%%2%(12,)_before_sigmoid") => 0, Var("num16%%2%(13,)_before_sigmoid") => 0, Var("ptbool%%1%(15,)_before_sigmoid") => -0.0022116264957641276, Var("freq_var%%1%(11,)_before_sigmoid") => 0.0003466073792683527, Var("freq_app%%2%(12,)_before_sigmoid") => 0, Var("ptrue%%1%(11,)_before_sigmoid") => 0.001524765093156994, Var("freq_boolean%%1%(12,)_before_sigmoid") => -0.00020801570572137986, Var("num16%%3%(0,)_before_sigmoid") => 0, Var("freq_abs%%2%(12,)_before_sigmoid") => 0, Var("freq_var%%1%(12,)_before_sigmoid") => -0.00020801570572137986, Var("freq_var%%2%(11,)_before_sigmoid") => -0.00232182567641436, Var("ptrue%%1%(13,)_before_sigmoid") => -0.0008320628228855195, Var("freq_boolean%%1%(13,)_before_sigmoid") => 0.0006240471171641397, Var("freq_abs%%1%(12,)_before_sigmoid") => 0.0006240471171641397, Var("ptrue%%2%(11,)_before_sigmoid") => 0.0009713845336681465, Var("ptrue%%2%(13,)_before_sigmoid") => 0, Var("num1%%1%(11,)_before_sigmoid") => 0.0012476649250079015, Var("num4%%2%(12,)_before_sigmoid") => 0)

Saving samples...
Saved samples to /space/tjoa/tuning-output/test/stlc/typebased/sz=3-tysz=2/dependents=size-stack_tail/ty_dependents=size-stack_tail/stack_size=1/intwidth=6/reinforce_sampling_entropy/freq=1-spb=50/eq=prob_equals/prop=stlcwelltyped/failure_penalty=0.01/0.01/epochs=3/terms_trained.txt.
  6.516579669 seconds

Saved Coq generator to /space/tjoa/tuning-output/test/stlc/typebased/sz=3-tysz=2/dependents=size-stack_tail/ty_dependents=size-stack_tail/stack_size=1/intwidth=6/reinforce_sampling_entropy/freq=1-spb=50/eq=prob_equals/prop=stlcwelltyped/failure_penalty=0.01/0.01/epochs=3/trained_Generator.v
2024-05-08T23:00:55.108
Total time elapsed: 58 seconds, 372 milliseconds
