2024-06-04T13:02:33.092 50bd5f12 ["-f", "TypeBasedSTLCGenerator(2,1,[:size,:stack_tail],[:size,:stack_tail],2,6)", "Pair{SamplingEntropy{STLC},Float64}[SamplingEntropy{STLC}(1,50,STLCMightType(),:eq_structure,0,0,true)=>0.5]", "10"]
== Config ==
TAG: test2
TypeBasedSTLCGenerator(2, 1, [:size, :stack_tail], [:size, :stack_tail], 2, 6)
Pair{SamplingEntropy{STLC}, Float64}[SamplingEntropy{STLC}(1, 50, STLCMightType(), :eq_structure, 0, 0, true) => 0.5]
Epochs: 10
DistNat: DistUInt32
SEED: 0

Building generation computation graph...
  3.547538018 seconds

Saving samples...
ADNodes of interest (initial):
Dict("num4%%1%(0, 13)" => 0.5, "freq_var%%2%(0, 0)" => 0.5, "num4%%2%(0, 0)" => 0.5, "freq_abs%%1%(0, 13)" => 0.5, "freq_app%%1%(0, 12)" => 0.5, "freq_bool%%1%(0, 11)" => 0.5, "freq_abs%%2%(0, 0)" => 0.5, "freq_abs%%1%(0, 12)" => 0.5, "num32%%2%(0, 0)" => 0.5, "ptrue%%1%(0, 13)" => 0.5, "freq_bool%%1%(0, 12)" => 0.5, "num1%%1%(0, 11)" => 0.5, "ptbool%%1%(11, 10)" => 0.5, "num8%%1%(0, 12)" => 0.5, "pvar%%0%(13, 12)" => 0.5, "freq_app%%1%(0, 11)" => 0.5, "num2%%1%(0, 13)" => 0.5, "num2%%1%(0, 12)" => 0.5, "pvar%%0%(12, 11)" => 0.5, "freq_bool%%1%(0, 13)" => 0.5, "freq_var%%1%(0, 12)" => 0.5, "num32%%1%(0, 11)" => 0.5, "ptrue%%1%(0, 11)" => 0.5, "pvar%%0%(12, 13)" => 0.5, "num1%%1%(0, 12)" => 0.5, "ptbool%%1%(12, 10)" => 0.5, "freq_abs%%1%(0, 11)" => 0.5, "ptbool%%1%(13, 10)" => 0.5, "ptrue%%2%(0, 0)" => 0.5, "num2%%1%(0, 11)" => 0.5, "num32%%1%(0, 13)" => 0.5, "freq_bool%%2%(0, 0)" => 0.5, "num16%%1%(0, 11)" => 0.5, "pvar%%0%(11, 13)" => 0.5, "num8%%1%(0, 11)" => 0.5, "pvar%%0%(13, 11)" => 0.5, "num4%%1%(0, 11)" => 0.5, "num16%%1%(0, 13)" => 0.5, "num1%%2%(0, 0)" => 0.5, "num16%%1%(0, 12)" => 0.5, "num8%%1%(0, 13)" => 0.5, "num16%%2%(0, 0)" => 0.5, "pvar%%0%(11, 11)" => 0.5, "freq_var%%1%(0, 13)" => 0.5, "freq_var%%1%(0, 11)" => 0.5, "pvar%%0%(13, 13)" => 0.5, "pvar%%0%(11, 12)" => 0.5, "pvar%%0%(12, 12)" => 0.5, "num32%%1%(0, 12)" => 0.5, "ptrue%%1%(0, 12)" => 0.5, "num1%%1%(0, 13)" => 0.5, "num2%%2%(0, 0)" => 0.5, "freq_app%%1%(0, 13)" => 0.5, "ptbool%%1%(0, 10)" => 0.5, "num4%%1%(0, 12)" => 0.5, "freq_app%%2%(0, 0)" => 0.5, "num8%%2%(0, 0)" => 0.5)

Parameter values (initial):
Dict{Var, Union{Real, AbstractMatrix{<:Real}}}(Var("num4%%1%(0, 13)_before_sigmoid") => 0, Var("freq_bool%%2%(0, 0)_before_sigmoid") => 0, Var("num4%%1%(0, 11)_before_sigmoid") => 0, Var("num32%%1%(0, 12)_before_sigmoid") => 0, Var("num16%%1%(0, 11)_before_sigmoid") => 0, Var("num4%%1%(0, 12)_before_sigmoid") => 0, Var("num32%%2%(0, 0)_before_sigmoid") => 0, Var("freq_abs%%1%(0, 11)_before_sigmoid") => 0, Var("ptbool%%1%(12, 10)_before_sigmoid") => 0, Var("num2%%1%(0, 11)_before_sigmoid") => 0, Var("pvar%%0%(12, 13)_before_sigmoid") => 0, Var("num1%%2%(0, 0)_before_sigmoid") => 0, Var("freq_abs%%1%(0, 13)_before_sigmoid") => 0, Var("freq_abs%%1%(0, 12)_before_sigmoid") => 0, Var("num1%%1%(0, 13)_before_sigmoid") => 0, Var("freq_abs%%2%(0, 0)_before_sigmoid") => 0, Var("num8%%1%(0, 12)_before_sigmoid") => 0, Var("pvar%%0%(13, 12)_before_sigmoid") => 0, Var("freq_var%%1%(0, 12)_before_sigmoid") => 0, Var("pvar%%0%(12, 11)_before_sigmoid") => 0, Var("num8%%2%(0, 0)_before_sigmoid") => 0, Var("freq_bool%%1%(0, 13)_before_sigmoid") => 0, Var("num16%%2%(0, 0)_before_sigmoid") => 0, Var("num4%%2%(0, 0)_before_sigmoid") => 0, Var("num16%%1%(0, 13)_before_sigmoid") => 0, Var("ptrue%%1%(0, 12)_before_sigmoid") => 0, Var("pvar%%0%(11, 12)_before_sigmoid") => 0, Var("num8%%1%(0, 13)_before_sigmoid") => 0, Var("num2%%1%(0, 13)_before_sigmoid") => 0, Var("freq_app%%1%(0, 13)_before_sigmoid") => 0, Var("ptbool%%1%(13, 10)_before_sigmoid") => 0, Var("freq_bool%%1%(0, 11)_before_sigmoid") => 0, Var("num2%%2%(0, 0)_before_sigmoid") => 0, Var("num2%%1%(0, 12)_before_sigmoid") => 0, Var("ptrue%%1%(0, 13)_before_sigmoid") => 0, Var("freq_var%%1%(0, 11)_before_sigmoid") => 0, Var("ptbool%%1%(11, 10)_before_sigmoid") => 0, Var("num1%%1%(0, 12)_before_sigmoid") => 0, Var("freq_bool%%1%(0, 12)_before_sigmoid") => 0, Var("pvar%%0%(11, 11)_before_sigmoid") => 0, Var("ptrue%%1%(0, 11)_before_sigmoid") => 0, Var("freq_app%%1%(0, 11)_before_sigmoid") => 0, Var("pvar%%0%(13, 11)_before_sigmoid") => 0, Var("pvar%%0%(11, 13)_before_sigmoid") => 0, Var("pvar%%0%(13, 13)_before_sigmoid") => 0, Var("num1%%1%(0, 11)_before_sigmoid") => 0, Var("num32%%1%(0, 11)_before_sigmoid") => 0, Var("freq_app%%2%(0, 0)_before_sigmoid") => 0, Var("freq_app%%1%(0, 12)_before_sigmoid") => 0, Var("num8%%1%(0, 11)_before_sigmoid") => 0, Var("ptbool%%1%(0, 10)_before_sigmoid") => 0, Var("num32%%1%(0, 13)_before_sigmoid") => 0, Var("pvar%%0%(12, 12)_before_sigmoid") => 0, Var("freq_var%%1%(0, 13)_before_sigmoid") => 0, Var("ptrue%%2%(0, 0)_before_sigmoid") => 0, Var("num16%%1%(0, 12)_before_sigmoid") => 0, Var("freq_var%%2%(0, 0)_before_sigmoid") => 0)

Saving samples...
Saved Coq generator to /space/tjoa/tuning-output/test2/stlc/typebased/sz=2-tysz=1/dependents=size-stack_tail/ty_dependents=size-stack_tail/stack_size=2/intwidth=6/reinforce_sampling_entropy/freq=1-spb=50/eq=eq_structure/prop=stlcmighttype/failure_penalty=0/forgiveness=0/rand_forgiveness=true/0.5/epochs=10/initial_Generator.v

ADNodes of interest (trained):
Dict("num4%%1%(0, 13)" => 0.5, "freq_var%%2%(0, 0)" => 0.34168780820253114, "num4%%2%(0, 0)" => 0.5, "freq_abs%%1%(0, 13)" => 0.5057433161261424, "freq_app%%1%(0, 12)" => 0.4779369907046883, "freq_bool%%1%(0, 11)" => 0.5263674563449687, "freq_abs%%2%(0, 0)" => 0.6351972464972122, "freq_abs%%1%(0, 12)" => 0.5613469397699132, "num32%%2%(0, 0)" => 0.5, "ptrue%%1%(0, 13)" => 0.5, "freq_bool%%1%(0, 12)" => 0.4779369907046883, "num1%%1%(0, 11)" => 0.5, "ptbool%%1%(11, 10)" => 0.5, "num8%%1%(0, 12)" => 0.5, "pvar%%0%(13, 12)" => 0.5, "freq_app%%1%(0, 11)" => 0.4865978012801782, "num2%%1%(0, 13)" => 0.5, "num2%%1%(0, 12)" => 0.5, "pvar%%0%(12, 11)" => 0.5112258352165916, "freq_bool%%1%(0, 13)" => 0.5368280940702431, "freq_var%%1%(0, 12)" => 0.4779369907046883, "num32%%1%(0, 11)" => 0.5, "ptrue%%1%(0, 11)" => 0.5, "pvar%%0%(12, 13)" => 0.5, "num1%%1%(0, 12)" => 0.5, "ptbool%%1%(12, 10)" => 0.5, "freq_abs%%1%(0, 11)" => 0.5638977820580959, "ptbool%%1%(13, 10)" => 0.5, "ptrue%%2%(0, 0)" => 0.5, "num2%%1%(0, 11)" => 0.5, "num32%%1%(0, 13)" => 0.5, "freq_bool%%2%(0, 0)" => 0.5524154581628073, "num16%%1%(0, 11)" => 0.5, "pvar%%0%(11, 13)" => 0.48533073984725794, "num8%%1%(0, 11)" => 0.5, "pvar%%0%(13, 11)" => 0.5000259194267708, "num4%%1%(0, 11)" => 0.5, "num16%%1%(0, 13)" => 0.5, "num1%%2%(0, 0)" => 0.5, "num16%%1%(0, 12)" => 0.5, "num8%%1%(0, 13)" => 0.5, "num16%%2%(0, 0)" => 0.5, "pvar%%0%(11, 11)" => 0.4976654651174123, "freq_var%%1%(0, 13)" => 0.47794718998070884, "freq_var%%1%(0, 11)" => 0.4136001637933999, "pvar%%0%(13, 13)" => 0.5, "pvar%%0%(11, 12)" => 0.5698953588966179, "pvar%%0%(12, 12)" => 0.5, "num32%%1%(0, 12)" => 0.5, "ptrue%%1%(0, 12)" => 0.5, "num1%%1%(0, 13)" => 0.5, "num2%%2%(0, 0)" => 0.5, "freq_app%%1%(0, 13)" => 0.47794718998070884, "ptbool%%1%(0, 10)" => 0.5, "num4%%1%(0, 12)" => 0.5, "freq_app%%2%(0, 0)" => 0.42610796238018817, "num8%%2%(0, 0)" => 0.5)

Parameter values (trained):
Dict{Var, Union{Real, AbstractMatrix{<:Real}}}(Var("num4%%1%(0, 13)_before_sigmoid") => 0, Var("freq_bool%%2%(0, 0)_before_sigmoid") => 0.21043496460543923, Var("num4%%1%(0, 11)_before_sigmoid") => 0, Var("num32%%1%(0, 12)_before_sigmoid") => 0, Var("num16%%1%(0, 11)_before_sigmoid") => 0, Var("num4%%1%(0, 12)_before_sigmoid") => 0, Var("num32%%2%(0, 0)_before_sigmoid") => 0, Var("freq_abs%%1%(0, 11)_before_sigmoid") => 0.25699633689489265, Var("ptbool%%1%(12, 10)_before_sigmoid") => 0, Var("num2%%1%(0, 11)_before_sigmoid") => 0, Var("pvar%%0%(12, 13)_before_sigmoid") => 0, Var("num1%%2%(0, 0)_before_sigmoid") => 0, Var("freq_abs%%1%(0, 13)_before_sigmoid") => 0.02297427496957065, Var("freq_abs%%1%(0, 12)_before_sigmoid") => 0.24663034031196013, Var("num1%%1%(0, 13)_before_sigmoid") => 0, Var("freq_abs%%2%(0, 0)_before_sigmoid") => 0.5545787689131546, Var("num8%%1%(0, 12)_before_sigmoid") => 0, Var("pvar%%0%(13, 12)_before_sigmoid") => 0, Var("freq_var%%1%(0, 12)_before_sigmoid") => -0.0883093828671814, Var("pvar%%0%(12, 11)_before_sigmoid") => 0.044910888070470174, Var("num8%%2%(0, 0)_before_sigmoid") => 0, Var("freq_bool%%1%(0, 13)_before_sigmoid") => 0.14757964820287028, Var("num16%%2%(0, 0)_before_sigmoid") => 0, Var("num4%%2%(0, 0)_before_sigmoid") => 0, Var("num16%%1%(0, 13)_before_sigmoid") => 0, Var("ptrue%%1%(0, 12)_before_sigmoid") => 0, Var("pvar%%0%(11, 12)_before_sigmoid") => 0.28142423260676414, Var("num8%%1%(0, 13)_before_sigmoid") => 0, Var("num2%%1%(0, 13)_before_sigmoid") => 0, Var("freq_app%%1%(0, 13)_before_sigmoid") => -0.0882685062087197, Var("ptbool%%1%(13, 10)_before_sigmoid") => 0, Var("freq_bool%%1%(0, 11)_before_sigmoid") => 0.10556775835029841, Var("num2%%2%(0, 0)_before_sigmoid") => 0, Var("num2%%1%(0, 12)_before_sigmoid") => 0, Var("ptrue%%1%(0, 13)_before_sigmoid") => 0, Var("freq_var%%1%(0, 11)_before_sigmoid") => -0.3491021520391442, Var("ptbool%%1%(11, 10)_before_sigmoid") => 0, Var("num1%%1%(0, 12)_before_sigmoid") => 0, Var("freq_bool%%1%(0, 12)_before_sigmoid") => -0.08830938286718139, Var("pvar%%0%(11, 11)_before_sigmoid") => -0.009338207389047039, Var("ptrue%%1%(0, 11)_before_sigmoid") => 0, Var("freq_app%%1%(0, 11)_before_sigmoid") => -0.05362163928931739, Var("pvar%%0%(13, 11)_before_sigmoid") => 0.00010367770717574151, Var("pvar%%0%(11, 13)_before_sigmoid") => -0.058693884707863186, Var("pvar%%0%(13, 13)_before_sigmoid") => 0, Var("num1%%1%(0, 11)_before_sigmoid") => 0, Var("num32%%1%(0, 11)_before_sigmoid") => 0, Var("freq_app%%2%(0, 0)_before_sigmoid") => -0.29774854388043887, Var("freq_app%%1%(0, 12)_before_sigmoid") => -0.08830938286718139, Var("num8%%1%(0, 11)_before_sigmoid") => 0, Var("ptbool%%1%(0, 10)_before_sigmoid") => 0, Var("num32%%1%(0, 13)_before_sigmoid") => 0, Var("pvar%%0%(12, 12)_before_sigmoid") => 0, Var("freq_var%%1%(0, 13)_before_sigmoid") => -0.0882685062087197, Var("ptrue%%2%(0, 0)_before_sigmoid") => 0, Var("num16%%1%(0, 12)_before_sigmoid") => 0, Var("freq_var%%2%(0, 0)_before_sigmoid") => -0.6557817957700923)

Saving samples...
Saved Coq generator to /space/tjoa/tuning-output/test2/stlc/typebased/sz=2-tysz=1/dependents=size-stack_tail/ty_dependents=size-stack_tail/stack_size=2/intwidth=6/reinforce_sampling_entropy/freq=1-spb=50/eq=eq_structure/prop=stlcmighttype/failure_penalty=0/forgiveness=0/rand_forgiveness=true/0.5/epochs=10/trained_Generator.v

2024-06-04T13:03:13.426
Total time elapsed: 40 seconds, 334 milliseconds
